# Use the official Microsoft IIS base image with ASP.NET 4.8
FROM mcr.microsoft.com/dotnet/framework/aspnet:4.8-windowsservercore-ltsc2019

# Set environment variables
ENV WEBSITE_PHYSICAL_PATH="C:\inetpub\wwwroot"
ENV ASPNETCORE_ENVIRONMENT="Production"

# Expose the port that the application will run on
EXPOSE 80

# Copy the published application to the IIS root folder
COPY ./bin/app.publish/ ${WEBSITE_PHYSICAL_PATH}

# Optional: If you need to install additional dependencies, you can do so here
# For example, to install additional Windows features:
# RUN dism.exe /online /enable-feature /all /featurename:NetFx3 /NoRestart

# Set the working directory
WORKDIR ${WEBSITE_PHYSICAL_PATH}

# Optional: Set up any additional IIS configurations here
# For example, to add a custom binding:
# RUN powershell -NoProfile -Command \
#     Import-Module IISAdministration; \
#     New-IISSite -Name "MySite" -PhysicalPath "${WEBSITE_PHYSICAL_PATH}" -BindingInformation "*:8080:"

# The entry point is provided by the base image to start IIS


# docker build -t aspnet-mvc-app .
# docker run -d -p 8080:80 aspnet-mvc-app

# docker system prune -a --volumes
# http://host.docker.internal:8080